{"name":"Git-changelog","tagline":"Changelog from git repo","body":"# Git Changelog Lib [![Build Status](https://travis-ci.org/tomasbjerre/git-changelog-lib.svg?branch=master)](https://travis-ci.org/tomasbjerre/git-changelog-lib)\r\n\r\nThis is a library for generating a changelog, or releasenotes, from a GIT repository. It can also be run as a standalone program, Gradle plugin, Maven plugin or Jenkins plugin.\r\n\r\nIt is fully configurable with a [Mustache](http://mustache.github.io/) template. That can:\r\n\r\n * Be stored to file, like CHANGELOG.md. There are some templates used for testing available [here](https://github.com/tomasbjerre/git-changelog/tree/master/src/test/resources/templates) and the results [here](https://github.com/tomasbjerre/git-changelog/tree/master/src/test/resources/assertions).\r\n * Be posted to MediaWiki ([here](https://github.com/tomasbjerre/git-changelog-lib/tree/screenshots/sandbox) is an example)\r\n * Or just be printed to STDOUT\r\n\r\nIt can integrate with Jira and/or GitHub to retrieve the title of issues.\r\n\r\nThere are some screenshots [here](https://github.com/tomasbjerre/git-changelog-lib/tree/screenshots/sandbox).\r\n\r\n## Usage\r\nThis software can be used:\r\n * With a [Gradle plugin](https://github.com/tomasbjerre/git-changelog-gradle-plugin).\r\n * With a [Maven plugin](https://github.com/tomasbjerre/git-changelog-maven-plugin).\r\n * With a [Jenkins plugin](https://github.com/tomasbjerre/git-releasenotes-plugin).\r\n * As a library [Maven Central](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22git-changelog-lib%22).\r\n * From command line [Maven Central](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22git-changelog-lib%22) (the zip file).\r\n\r\n### Library\r\n\r\nIt has a [builder](https://github.com/tomasbjerre/git-changelog/blob/master/src/main/java/se/bjurr/gitchangelog/api/GitChangelogApi.java) for creating the changelog.\r\n\r\n```\r\n  gitChangelogApiBuilder()\r\n   .withFromCommit(ZERO_COMMIT)\r\n   .withToRef(\"refs/heads/master\")\r\n   .withTemplatePath(\"changelog.mustache\")\r\n   .toFile(\"CHANGELOG.md\");\r\n```\r\n\r\nIt can also create releasenotes. If you are using git flow it may look like this.\r\n\r\n```\r\n  gitChangelogApiBuilder()\r\n   .withFromRef(\"refs/heads/dev\")\r\n   .withToRef(\"refs/heads/master\")\r\n   .withTemplatePath(\"releasenotes.mustache\")\r\n   .toStdout();\r\n```\r\nA page can be created in MediaWiki like this.\r\n\r\n```\r\n .toMediaWiki(\r\n  \"username\",\r\n  \"password\",\r\n  \"http://host/mediawiki\",\r\n  \"Title of page\");\r\n```\r\n\r\n### Command line\r\nOr from command line:\r\n```\r\n-cl, --custom-issue-link <string>          Custom issue link.\r\n                                           <string>: any string\r\n                                           Default: null\r\n-cn, --custom-issue-name <string>          Custom issue name.\r\n                                           <string>: any string\r\n                                           Default: null\r\n-cp, --custom-issue-pattern <string>       Custom issue pattern.\r\n                                           <string>: any string\r\n                                           Default: null\r\n-df, --date-format <string>                Format to use when printing dates.\r\n                                           <string>: any string\r\n                                           Default: YYYY-MM-dd HH:mm:ss\r\n-fc, --from-commit <string>                From commit.\r\n                                           <string>: any string\r\n                                           Default: 0000000000000000000000000000000000000000\r\n-fr, --from-ref <string>                   From ref.\r\n                                           <string>: any string\r\n                                           Default: null\r\n-gapi, --github-api <string>               GitHub API.\r\n                                           <string>: any string\r\n                                           Default: \r\n-h, --help <argument-to-print-help-for>    <argument-to-print-help-for>: an argument to print help for\r\n                                           Default: If no specific parameter is given the whole usage text is given\r\n-ip, --ignore-pattern <string>             Ignore commits where pattern \r\n                                           matches message.\r\n                                           <string>: any string\r\n                                           Default: ^\\[maven-release-plugin\\].*|^\\[Gradle Release Plugin\\].*|^Merge.*\r\n-jp, --jira-pattern <string>               Jira issue pattern.\r\n                                           <string>: any string\r\n                                           Default: \\b[a-zA-Z]([a-zA-Z]+)-([0-9]+)\\b\r\n-jpw, --jira-password <string>             Optional password to authenticate \r\n                                           with Jira.\r\n                                           <string>: any string\r\n                                           Default: \\b[a-zA-Z]([a-zA-Z]+)-([0-9]+)\\b\r\n-js, --jiraServer <string>                 Jira server. When a Jira server is \r\n                                           given, the title of the Jira issues can be \r\n                                           used in the changelog.\r\n                                           <string>: any string\r\n                                           Default: \r\n-ju, --jira-username <string>              Optional username to authenticate \r\n                                           with Jira.\r\n                                           <string>: any string\r\n                                           Default: \\b[a-zA-Z]([a-zA-Z]+)-([0-9]+)\\b\r\n-mp, --mediawiki-password <string>         Password to authenticate with \r\n                                           MediaWiki.\r\n                                           <string>: any string\r\n                                           Default: \r\n-mt, --mediawiki-title <string>            Title of MediaWiki page.\r\n                                           <string>: any string\r\n                                           Default: null\r\n-mu, --mediawiki-user <string>             User to authenticate with MediaWiki.\r\n                                           <string>: any string\r\n                                           Default: \r\n-murl, --mediawiki-url <string>            Base URL of MediaWiki.\r\n                                           <string>: any string\r\n                                           Default: \r\n-ni, --no-issue-name <string>              Name of virtual issue that contains \r\n                                           commits that has no issue associated.\r\n                                           <string>: any string\r\n                                           Default: No issue\r\n-of, --output-file <string>                Write output to file.\r\n                                           <string>: any string\r\n                                           Default: \r\n-r, --repo <string>                        Repository.\r\n                                           <string>: any string\r\n                                           Default: .\r\n-ri, --remove-issue-from-message           Dont print any issues in the \r\n                                           messages of commits.\r\n                                           Default: disabled\r\n-rt, --readable-tag-name <string>          Pattern to extract readable part of \r\n                                           tag.\r\n                                           <string>: any string\r\n                                           Default: /([^/]+?)$\r\n-sf, --settings-file <string>              Use settings from file.\r\n                                           <string>: any string\r\n                                           Default: null\r\n-std, --stdout                             Print builder to <STDOUT>.\r\n                                           Default: disabled\r\n-t, --template <string>                    Template to use. A default template \r\n                                           will be used if not specified.\r\n                                           <string>: any string\r\n                                           Default: git-changelog-template.mustache\r\n-tc, --to-commit <string>                  To commit.\r\n                                           <string>: any string\r\n                                           Default: null\r\n-tr, --to-ref <string>                     To ref.\r\n                                           <string>: any string\r\n                                           Default: refs/heads/master\r\n-tz, --time-zone <string>                  TimeZone to use when printing dates.\r\n                                           <string>: any string\r\n                                           Default: UTC\r\n-ut, --untagged-name <string>              When listing commits per tag, this \r\n                                           will by the name of a virtual tag that \r\n                                           contains commits not available in any git \r\n                                           tag.\r\n                                           <string>: any string\r\n                                           Default: No tag\r\n```\r\n\r\nCreating a MediaWiki page can be done like this.\r\n```\r\n./git-changelog-lib -murl http://localhost/mediawiki -mu tomas -mp tomaskod -mt \"Tomas Title\" -t /home/bjerre/workspace/git-changelog-lib/changelog_mediawiki.mustache -ut \"Next release\"\r\n```\r\n\r\n## Supplied information\r\n\r\nThe template is supplied with a datastructure like:\r\n```\r\n* commits\r\n - authorName\r\n - authorEmailAddress\r\n - message\r\n - commitTime\r\n* tags\r\n - name\r\n * commits\r\n  - authorName\r\n  - authorEmailAddress\r\n  - message\r\n  - commitTime\r\n * authors\r\n  - authorName\r\n  - authrorEmail\r\n  * commits\r\n   - authorName\r\n   - authorEmailAddress\r\n   - message\r\n   - commitTime\r\n * issues\r\n  - name\r\n  - hasIssue\r\n  - issue\r\n  - hasLink\r\n  - link\r\n  - hasTitle\r\n  - title\r\n  * commits\r\n   - authorName\r\n   - authorEmailAddress\r\n   - message\r\n   - commitTime\r\n  * authors\r\n   - authorName\r\n   - authrorEmail\r\n   * commits\r\n    - authorName\r\n    - authorEmailAddress\r\n    - message\r\n    - commitTime\r\n* authors\r\n - authorName\r\n - authrorEmail\r\n * commits\r\n  - authorName\r\n  - authorEmailAddress\r\n  - message\r\n  - commitTime\r\n* issues\r\n - name\r\n - hasIssue\r\n - issue\r\n - hasLink\r\n - link\r\n - hasTitle\r\n - title\r\n * commits\r\n  - authorName\r\n  - authorEmailAddress\r\n  - message\r\n  - commitTime\r\n * authors\r\n  - authorName\r\n  - authrorEmail\r\n  * commits\r\n   - authorName\r\n   - authorEmailAddress\r\n   - message\r\n   - commitTime\r\n```\r\n\r\n## MediaWiki\r\nThe library can create a wiki page in MediaWiki. To do this, you must enable the API in MediaWiki in `mediawiki/LocalSettings.php` by adding:\r\n```\r\n$wgEnableAPI = true;\r\n$wgEnableWriteAPI = true;\r\n```\r\n\r\n## Developer instructions\r\n\r\nTo build the code, have a look at `.travis.yml`.\r\n\r\nTo do a release you need to do `./gradlew release` and release the artifact from [staging](https://oss.sonatype.org/#stagingRepositories). More information [here](http://central.sonatype.org/pages/releasing-the-deployment.html).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}